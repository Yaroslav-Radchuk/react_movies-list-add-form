{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onBlur","onChange","isError","useState","Math","random","toString","slice","id","hasError","htmlFor","classNames","type","placeholder","pattern","NewMovie","onAdd","count","setCount","onBlurTitle","setOnBlurTitle","onBlurImgUrl","setOnBlurImgUrl","onBlurImdbUrl","setOnBlurImdbUrl","onBlurImdbId","setOnBlurImdbId","setMovie","handleOnBlur","event","target","test","handleChange","prevState","notActiveButton","preventDefault","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"wuEAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,aAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAf,0BA5BkC,ECE7BC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,OAFE,KAFsB,E,+BCQpC,IAAMC,EAA6B,SAAC,GAQpC,IAPLC,EAOI,EAPJA,KACAC,EAMI,EANJA,MAMI,IALJC,aAKI,MALIF,EAKJ,MAJJG,gBAII,SAHJC,EAGI,EAHJA,OACAC,EAEI,EAFJA,SACAC,EACI,EADJA,QAGA,EAAaC,oBAAS,2BAASP,EAAT,YAbfQ,KAAKC,SAASC,WAAWC,MAAM,GAahB,IAAfC,EAAP,oBAGMC,EAAWV,GAAYG,EAE7B,OACE,sBAAKnB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ2B,QAASF,EAAlC,SACGV,IAGH,qBAAKf,UAAU,UAAf,SACE,uBACEyB,GAAIA,EACJZ,KAAMA,EACN,0BAAkBA,GAClBb,UAAW4B,IAAW,QAAS,CAC7B,YAAaF,IAEfG,KAAK,OACLC,YAAW,gBAAWf,GACtBD,MAAOA,EACPI,SAAUA,EACVD,OAAQA,MAIXS,GACC,mBAAG1B,UAAU,iBAAb,mBAAkCe,EAAlC,oBAIP,ECnDYgB,EAAU,qKAEVC,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAG3C,EAA0Bb,mBAAS,GAAnC,mBAAOc,EAAP,KAAcC,EAAd,KACA,EAAsCf,oBAAS,GAA/C,mBAAOgB,EAAP,KAAoBC,EAApB,KACA,EAAwCjB,oBAAS,GAAjD,mBAAOkB,EAAP,KAAqBC,EAArB,KACA,EAA0CnB,oBAAS,GAAnD,mBAAOoB,EAAP,KAAsBC,EAAtB,KACA,EAAwCrB,oBAAS,GAAjD,mBAAOsB,EAAP,KAAqBC,EAArB,KACA,EAA0BvB,mBAAS,CACjChB,MAAO,GACPC,YAAa,GACbH,OAAQ,GACRK,QAAS,GACTI,OAAQ,KALV,mBAAOZ,EAAP,KAAc6C,EAAd,KA6BMC,EAAe,SAACC,GACpB,MAAwBA,EAAMC,OAAtBlC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd,OAAQD,GACN,IAAK,QACEd,EAAMK,OACTiC,GAAe,GAGjB,MAEF,IAAK,SACEtC,EAAMG,QAAW6B,EAAQiB,KAAKlC,IACjCyB,GAAgB,GAGlB,MAEF,IAAK,UACExC,EAAMQ,SAAYwB,EAAQiB,KAAKlC,IAClC2B,GAAiB,GAGnB,MAEF,IAAK,SACE1C,EAAMY,QACTgC,GAAgB,GAQvB,EAEKM,EAAe,SAACH,GACpB,MAAwBA,EAAMC,OAAtBlC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEd8B,GAAS,SAAAM,GAAS,kCACbA,GADa,kBAEfrC,EAAOC,GAFQ,IAKL,UAATD,GACFwB,GAAe,GAGJ,WAATxB,GACF0B,GAAgB,GAGL,YAAT1B,GACF4B,GAAiB,GAGN,WAAT5B,GACF8B,GAAgB,EAEnB,EAEKQ,GACHpD,EAAMK,QACHL,EAAMG,SACNH,EAAMQ,UACNR,EAAMY,OAGZ,OACE,uBACEX,UAAU,WAEVkB,SAnFiB,SAAC4B,GACpBA,EAAMM,iBAEFrD,EAAMK,OAASL,EAAMG,QAAUH,EAAMQ,SAAWR,EAAMY,SACxDsB,EAAMlC,GACNoC,EAASD,EAAQ,GAfnBU,EAAS,CACPxC,MAAO,GACPC,YAAa,GACbH,OAAQ,GACRK,QAAS,GACTI,OAAQ,KAEVwB,EAAS,GAWV,EAwEC,UAKE,oBAAInC,UAAU,QAAd,yBAEA,cAAC,EAAD,CACEa,KAAK,QACLE,MAAM,QACND,MAAOf,EAAMK,MACbc,SAAU+B,EACVhC,OAAQ4B,EACR1B,QAASiB,EACTpB,UAAQ,IAGV,cAAC,EAAD,CACEH,KAAK,cACLE,MAAM,cACND,MAAOf,EAAMM,YACba,SAAU+B,EACVhC,OAAQ4B,IAGV,cAAC,EAAD,CACEhC,KAAK,SACLE,MAAM,YACND,MAAOf,EAAMG,OACbgB,SAAU+B,EACVhC,OAAQ4B,EACR1B,QAASmB,EACTtB,UAAQ,IAGV,cAAC,EAAD,CACEH,KAAK,UACLE,MAAM,WACND,MAAOf,EAAMQ,QACbW,SAAU+B,EACVhC,OAAQ4B,EACR1B,QAASqB,EACTxB,UAAQ,IAGV,cAAC,EAAD,CACEH,KAAK,SACLE,MAAM,UACND,MAAOf,EAAMY,OACbO,SAAU+B,EACVhC,OAAQ4B,EACR1B,QAASuB,EACT1B,UAAQ,IAGV,qBAAKhB,UAAU,mBAAf,SACE,qBAAKA,UAAU,UAAf,SACE,wBACE6B,KAAK,SACL,UAAQ,gBACR7B,UAAU,iBACVqD,SAAUF,EAJZ,uBAvDCjB,EAmEV,E,QCpLYoB,EAAgB,WAC3B,MAA4BlC,mBAAS,YAAImC,IAAzC,mBAAO9C,EAAP,KAAe+C,EAAf,KAMA,OACE,sBAAKxD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAEtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CAAUiC,MAVC,SAAClC,GAChByD,EAAU,GAAD,mBAAK/C,GAAL,CAAaV,IACvB,QAYF,ECpBD0D,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.9f14ad6c.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { ChangeEvent } from '../../types/Movie';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onBlur: (event: React.FocusEvent<HTMLInputElement, Element>) => void,\n  onChange?: (newValue: ChangeEvent) => void,\n  isError?: boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onBlur,\n  onChange,\n  isError,\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const hasError = required && isError;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          name={name}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={onChange}\n          onBlur={onBlur}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Movie, ChangeEvent } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\n// eslint-disable-next-line\nexport const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport const NewMovie: React.FC<Props> = (({ onAdd }) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count, setCount] = useState(0);\n  const [onBlurTitle, setOnBlurTitle] = useState(false);\n  const [onBlurImgUrl, setOnBlurImgUrl] = useState(false);\n  const [onBlurImdbUrl, setOnBlurImdbUrl] = useState(false);\n  const [onBlurImdbId, setOnBlurImdbId] = useState(false);\n  const [movie, setMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const reset = () => {\n    setMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n    setCount(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (movie.title && movie.imgUrl && movie.imdbUrl && movie.imdbId) {\n      onAdd(movie);\n      setCount(count + 1);\n      reset();\n    }\n  };\n\n  const handleOnBlur = (event: React.FocusEvent<HTMLInputElement, Element>) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'title':\n        if (!movie.title) {\n          setOnBlurTitle(true);\n        }\n\n        break;\n\n      case 'imgUrl':\n        if (!movie.imgUrl && !pattern.test(value)) {\n          setOnBlurImgUrl(true);\n        }\n\n        break;\n\n      case 'imdbUrl':\n        if (!movie.imdbUrl && !pattern.test(value)) {\n          setOnBlurImdbUrl(true);\n        }\n\n        break;\n\n      case 'imdbId':\n        if (!movie.imdbId) {\n          setOnBlurImdbId(true);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleChange = (event: ChangeEvent) => {\n    const { name, value } = event.target;\n\n    setMovie(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n\n    if (name === 'title') {\n      setOnBlurTitle(false);\n    }\n\n    if (name === 'imgUrl') {\n      setOnBlurImgUrl(false);\n    }\n\n    if (name === 'imdbUrl') {\n      setOnBlurImdbUrl(false);\n    }\n\n    if (name === 'imdbId') {\n      setOnBlurImdbId(false);\n    }\n  };\n\n  const notActiveButton = (\n    !movie.title\n    || !movie.imgUrl\n    || !movie.imdbUrl\n    || !movie.imdbId\n  );\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onChange={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={movie.title}\n        onChange={handleChange}\n        onBlur={handleOnBlur}\n        isError={onBlurTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={movie.description}\n        onChange={handleChange}\n        onBlur={handleOnBlur}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={movie.imgUrl}\n        onChange={handleChange}\n        onBlur={handleOnBlur}\n        isError={onBlurImgUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={movie.imdbUrl}\n        onChange={handleChange}\n        onBlur={handleOnBlur}\n        isError={onBlurImdbUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={movie.imdbId}\n        onChange={handleChange}\n        onBlur={handleOnBlur}\n        isError={onBlurImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={notActiveButton}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n});\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState([...moviesFromServer]);\n\n  const addMovie = (movie: Movie) => {\n    setMovies([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}